
# CEM actor + random sampling for bellman max.

# TRAIN-COLLECT-EVAL LOOP
train_collect_eval.collect_env = @train/KukaGraspingProceduralEnv()
train_collect_eval.eval_env = @train/KukaGraspingProceduralEnv()
train_collect_eval.test_env = @test/KukaGraspingProceduralEnv()
train_collect_eval.policy_class = @PerStepSwitchPolicy

PerStepSwitchPolicy.explore_policy_class = @RandomGraspingPolicyD4
PerStepSwitchPolicy.greedy_policy_class = @CEMActorPolicy

train_collect_eval.num_collect = 50
train_collect_eval.num_eval = 50
train_collect_eval.num_test = 50


# CONFIGURE POLICY (TRAIN, RUN)
CEMActorPolicy.q_func = @cnn_ia_v1
cnn_ia_v1.use_timestep = True
CEMActorPolicy.state_shape = (1, 64, 64, 3)
CEMActorPolicy.action_size = 4
CEMActorPolicy.include_timestep = True
CEMActorPolicy.build_target = True

# TRAINING
get_data.parse_fn = @parse_tfexample_v0
parse_tfexample_v0.img_height = 64
parse_tfexample_v0.img_width = 64
parse_tfexample_v0.action_size = 4

train_q.optimizer = @AdamOptimizer()
train_q.training_steps = 10000
train_q.max_training_steps = 2000000
train_q.log_every_n_steps=1000
train_q.save_summaries_steps=1000
train_q.update_target_every_n_steps = 50
train_q.save_checkpoint_steps=1000

train_q.q_graph_fn = @random_continuous_q_graph
random_continuous_q_graph.gamma = 0.9
random_continuous_q_graph.num_samples = 16
random_continuous_q_graph.target_network_type = %doubleq

AdamOptimizer.learning_rate = 0.001
huber_loss.delta = 1.0

# RUN AGENT
run_env.explore_schedule = @LinearSchedule()
run_env.episode_to_transitions_fn = @episode_to_transitions_v0

# CONFIGURE EXPLORATION
LinearSchedule.schedule_timesteps = 100000
LinearSchedule.final_p = .05

episode_to_transitions_v0.continuous = True
